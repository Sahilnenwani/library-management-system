@model libraryproject.IssueBookTable

@{
    ViewBag.Title = "Issue Book";
    Layout = "~/Views/Shared/sharedview.cshtml";
}

@*<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>IssueBookTable</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StudentID, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookID, "BookID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BookID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BookID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IssueCopies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IssueCopies, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IssueCopies, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IssueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IssueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IssueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReturnDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReturnDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@






















@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()






    @*<h4>IssueBookTable</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.StudentID, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
        </div>
    </div>*@





    <div class="form-horizontal">
        @*<h4>StudentTable</h4>
        <hr />*@

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label class="bmd-label-floating">Issue ID</label>
                    <input type="text" class="form-control" disabled>
                </div>
            </div>

            <div class="col-md-3">
                <div class="nav-item dropdown">
                    <label class="bmd-label-floating">Student ID</label>
                    @*@Html.LabelFor(model => model.StudentID, "StudentID", htmlAttributes: new { @class = "nav-link dropdown-toggle" })*@

                    @Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "nav-link dropdown-toggle" })
                    @*@Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
                @Html.DropDownList("StuentTypeID", null, htmlAttributes: new { @class = "nav-link dropdown-toggle" })*@
                </div>
            </div>
            <div class="nav-item dropdown">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookID, "BookID", htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.DropDownList("BookID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BookID, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
                




            </div>


            


            <div class="form-group">
            
                <div class="col-md-4">
                    <label class="bmd-label-floating">Issue Date</label>

                    @Html.EditorFor(model => model.IssueDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IssueDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
            
                <div class="col-md-4">
                    <label class="bmd-label-floating">Return Date</label>


                    @Html.EditorFor(model => model.ReturnDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <div class="checkbox">
                        @Html.EditorFor(model => model.Status)
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>





            <div class="col-md-3">
                <div class="form-group">
                    <label class="bmd-label-floating">Book Copies</label>
                    @Html.EditorFor(model => model.IssueCopies, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IssueCopies@*, "", new { @class = "text-danger"*@)
                </div>
            </div>





            <div class="form-group">
            
                <div class="col-md-10">
                    <label class="bmd-label-floating">Description</label>
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>           
        </div>
        









        <button type="submit" class="btn btn-primary pull-center">Issue Book</button>
        <div class="clearfix"></div>

   
}

<div>
    @Html.ActionLink("Back to List", "Book Table")
</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>















